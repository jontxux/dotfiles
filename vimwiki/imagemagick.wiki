= Imagemagick =
== Capturas ==
*Captura de pantalla*
{{{bash
import -window root screenshot.png
}}}
*Captura de pantalla seleccionado rango*
{{{bash
import screenshot.png
}}}
== Conversiones ==
=== Formatos ===
*Crear un Favicon*
{{{bash
convert -colors 256 -resize 16x16 image.jpg favicon.ico
}}}
*Texto a imagen*
{{{bash
convert TEXT:image.txt image.png
}}}
*Convertir una imagen PNG en JPG*
{{{bash
convert image.png image.jpg
}}}
*Convertir una imagen PNG en JPG indicando la calidad de conversión.*
{{{bash
convert -quality 96 image.png image.jpg
}}}
*Convertir todas las imágenes PNG en JPG contenidas en una carpeta*
{{{bash
mogrify -format png *.jpg
}}}
*Convertir todas las imágenes (*.jpg, *.png) en PDF*
{{{bash
convert images*.* archivo.pdf
}}}
=== Tamaño ===
*Cambiar el tamaño de una imagen*
{{{bash
convert -resize 48x48 image.png image-mini.png
}}}
*Cambiar el tamaño de todas la imágenes de una carpeta*
{{{bash
mogrify -resize 48x48 *.png
}}}
*Cambiar el tamaño de una imagen indicando el ancho*
{{{bash
convert -resize 620x image.png image-620.png
}}}
*Cambiar el tamaño de una imagen indicando el alto*
{{{bash
convert -resize x100 image.png image-100.png
}}}
=== Color ===
*Convertir una imagen en color en blanco y negro*
{{{bash
#true grayscale only:
convert source.jpg -colorspace Gray destination.jpg
#true black and white:
convert source.jpg -monochrome destination.jpg
#separate into gray channels:
convert source.jpg -separate destination.jpg
#However, if you want two colors only (black and white), then you need to threshold. For example, to select the color where above will be white and below will be black.
# para extrar letras
convert image3.png -threshold 50% result.png
convert <input> -threshold xx% <output>
}}}
*Añadir un borde transparente de 1 pixel alrededor de una imagen*
{{{bash
convert -bordercolor Transparent -border 1x1 image.png image-borde.png
}}}
*Añadir un borde negro de 10 pixels alrededor de una imagen*
{{{bash
convert -bordercolor "#000000" -border 10x10 image.png image-borde.png
}}}
*Crear un negativo de una imagen*
{{{bash
convert -negate image.png image-negate.png
}}}
*Cambiar el color*
{{{bash
convert imagen_entrada.jpg -fuzz 5% -fill nuevo_color -opaque color_origen imagen_salida.jpg
}}}
=== Rotaciones ===
*Rotar una imagen en vertical*
{{{bash
convert -flip image.png image-inversee.png
}}}
*Rotar una imagen de izquierda a derecha*
{{{bash
convert -flop image.png image-inversee.png
}}}
== Mostrar imagen ==
*Usar el GUI de ImageMagick*
{{{bash
display image.png
convert image.jpg -crop 1:1 JPG:- | display
}}}
== Información ==
*Obtener información de una imagen.*
{{{bash
identify -ping image.png
  }}}
*Obtener aún más información.*
{{{bash
identify -verbose image.png
}}}
*Conocer la lista de colores utilizados en una imagen.*
{{{bash
identify -list color image.png
}}}
= Comandos guapizados =
*Extraer palabras*
{{{bash
import png:- | convert - -threshold 50% png:- | tesseract --dpi 300 stdin stdout 2> /dev/null
}}}
*detectar color pixel*
{{{bash
eval $(xdotool getmouselocation --shell)
IMAGE=$(import -window root -depth 8 -crop 1x1+$X+$Y txt:-)
COLOR=$(echo $IMAGE | grep -oP '#\w+')
}}}

*iman*
{{{bash
convert <imagen entrada> -resize 850x850 -stroke 'gray'  -fill None  -strokewidth 3 -draw 'translate 325,323  circle 100,100 498,50' -quality 100 <imagen salida>
}}}

*densidad para imprimir*
{{{bash
convert -units PixelsPerInch <imagen entrada> -density 300 <imagen salida>
}}}

*rellenar*
{{{bash
convert input.jpg -gravity center -background black -extent 1400x1400  output.jpg
convert -size 1400x1400 canvas:gray -gravity center bautizo-cortado.jpg -composite out.jpg
}}}
